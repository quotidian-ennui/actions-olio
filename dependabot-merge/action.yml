name: dependabot-action-merge
description: |
  Merge PRs that modify actions from dependabot (up-to semver:minor).
  Has an implicit relationship to pr-trigger since it tries to use client_payload from
  a repository dispatch event.
inputs:
  token:
    description: The github token to use when committing changes
    required: false
    default: ${{ github.token }}
  change_filter:
    description: |
      The filter to use finding source file changes
    required: false
    default: ".github/workflows/**"
  automerge_level:
    description: |
      The semver level to allow automerge up to (default semver-patch|semver-minor).
    required: false
    default: "semver-patch|semver-minor"

runs:
  using: composite
  steps:
    - name: Changes
      id: changes
      uses: tj-actions/changed-files@90a06d6ba9543371ab4df8eeca0be07ca6054959 # v42.0.2
      with:
        files: ${{ inputs.change_filter }}
    - name: Prepare
      id: bootstrap
      shell: bash
      run: |
        function mergeable() {
          if [[ "${{ steps.changes.outputs.any_changed }}" != "true" ]]
          then
            return 1
          fi
          local update_type=${1/version-update:/}
          case "$update_type" in
          ${{ inputs.automerge_level }}) return 0;;
          *) return 1;;
          esac
        }
        if [[ "${{ github.event.client_payload.detail.pull_request }}" != "" && "${{ github.event.client_payload.base.actor }}" == "dependabot[bot]" ]]
        then
          echo "is_dependabot_pr=true"  >> "$GITHUB_OUTPUT"
        else
          echo "is_dependabot_pr=false"  >> "$GITHUB_OUTPUT"
        fi
        # shellcheck disable=SC2091
        if mergeable "${{ github.event.client_payload.detail.dependabot_update_type }}"
        then
          echo "automerge=true" >> "$GITHUB_OUTPUT"
        else
          echo "automerge=false" >> "$GITHUB_OUTPUT"
        fi
    - name: Generate Summary
      id: summary
      shell: bash
      run: |
        function largest_semver() {
          case "${{ inputs.automerge_level }}" in
            *semver-major*) echo "semver-major";;
            *semver-minor*) echo "semver-minor";;
            *) echo "semver-patch";;
          esac
        }

        {
          echo "| Decision Table | Value |";
          echo "| ------ | ------ |";
          echo "|Automerge allowed up to| $(largest_semver) |"
          echo "|Update Type| $(echo ${{ github.event.client_payload.detail.dependabot_update_type }} | sed -e "s/^version-update://") |";
          echo "|is_dependabot| ${{ steps.bootstrap.outputs.is_dependabot_pr }} |";
          echo "|change_filter| ${{ inputs.change_filter }} |";
          echo "|Files changed | ${{ steps.changes.outputs.any_changed  }} |";
        } > "$GITHUB_STEP_SUMMARY"
        eof=$(head -c15 /dev/urandom | base64)
        {
          printf "comment<<%s\n" "${eof}";
          cat "$GITHUB_STEP_SUMMARY";
          printf "%s\n" "${eof}";
        } >> "$GITHUB_OUTPUT"
    - name: Update PR
      id: comment
      uses: quotidian-ennui/actions-olio/pr-or-issue-comment@main
      if: |
        steps.bootstrap.outputs.is_dependabot_pr == 'true'
      with:
        issue_number: ${{ github.event.client_payload.detail.pull_request }}
        body: |
          :dependabot: Attempt Merge: ${{ steps.bootstrap.outputs.automerge }}

          ${{ steps.summary.outputs.comment }}
        token: ${{ inputs.token }}
        search_term: "dependabot-automerge-status ${{ inputs.change_filter }}"
    - name: Dependabot Merge
      continue-on-error: true
      if: |
        startsWith(github.event.client_payload.base.ref, 'dependabot') &&
        steps.bootstrap.outputs.is_dependabot_pr == 'true' &&
        steps.changes.outputs.any_changed  == 'true' &&
        steps.bootstrap.outputs.automerge == 'true'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        gh pr review --approve "${{ github.event.client_payload.detail.pull_request }}"
        gh pr merge -s "${{ github.event.client_payload.detail.pull_request }}"
