name: test-commenter

on:
  push:
    branches:
      - main
    paths:
      - "pr-or-issue-comment/**"
      - ".github/workflows/test-commenter.yml"
  pull_request:
    branches:
      - main
    paths:
      - "pr-or-issue-comment/**"
      - ".github/workflows/test-commenter.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  test-commenter:
    name: test-commenter
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      statuses: write
    steps:
      - name: step-security/harden-runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Update Status
        id: check_pending
        uses: ./commit-status-and-label
        if: github.event_name == 'pull_request'
        with:
          token: ${{ github.token }}
          sha:  ${{ github.event.pull_request.head.sha || github.event.workflow_run.head_sha || github.sha }}
          state: "pending"
      - name: generate comment
        id: generate
        run: |
          echo "comment=${{ github.event_name }}(${{ github.ref }}) on $(date -u +"%Y-%m-%d %H:%M:%S") via [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> "$GITHUB_OUTPUT"
      - name: comment
        id: comment_default_search
        uses: ./pr-or-issue-comment
        with:
          issue_number: 8
          body: |
            comment_default_search :alembic: - ${{ steps.generate.outputs.comment }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: comment
        id: comment_search
        uses: ./pr-or-issue-comment
        with:
          issue_number: 8
          body: |
            comment_search :alembic: + :mag: -  ${{ steps.generate.outputs.comment }}
          token: ${{ secrets.GITHUB_TOKEN }}
          search_term: "test-comment-with-search-term"
      - name: assert output
        id: assert
        run: |
          if [[ -z "${{ steps.comment_default_search.outputs.comment_id }}" ]]; then
            echo "::error::comment-id not set by comment_default_search"
            exit 1
          fi
          if [[ -z "${{ steps.comment_search.outputs.comment_id }}" ]]; then
            echo "::error::comment-id not set by comment_search"
            exit 1
          fi
      - name: Check Status
        id: check_outcome
        uses: ./commit-status-and-label
        if: |
          (success() || failure()) &&
          github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha:  ${{ github.event.pull_request.head.sha || github.event.workflow_run.head_sha || github.sha }}
          state: "${{ steps.assert.outcome }}"

  notification:
    name: notification
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - test-commenter
    if: |
      github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: dispatch
        uses: ./pr-trigger
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event_type: "pr-issue-comment-test-success"
